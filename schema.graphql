# General

interface MutationResponse {
  code: String!
  success: Boolean!
  message: String!
}

# User

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  emailVerifiedAt: Int
  avatar: String
}

input SignUpInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  avatar: String
}

type SignInQueryResponse {
  accessToken: String!
  refreshToken: String!
}

type SignUpMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  accessToken: String!
  refreshToken: String!
}

input SignInInput {
  email: String!
  password: String!
}

# Query

type Query {
  me: User
  signIn(input: SignInInput!): SignInQueryResponse
}

# Mutation

type Mutation {
  signUp(input: SignUpInput!): SignUpMutationResponse
}
